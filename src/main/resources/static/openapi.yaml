openapi: 3.0.1
info:
  title: COMMIT API
  version: "1.0.0"
  description: COMMIT 프로젝트의 주요 API 명세

servers:
  - url: http://localhost:8080

paths:
  /api/auth/login:
    post:
      tags: [인증]
      summary: 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
            example:
              username: "testuser"
              password: "password123"
      responses:
        '200':
          description: 액세스 토큰 발급
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                token_type: "Bearer"

  /api/auth/refresh:
    post:
      tags: [인증]
      summary: 토큰 갱신
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
            example:
              refreshToken: "refresh-token-value"
      responses:
        '200':
          description: 액세스 토큰 재발급
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
              example:
                access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                token_type: "Bearer"

  /api/challenge:
    post:
      tags: [챌린지]
      summary: 챌린지 생성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeCreateRequest'
            example:
              title: "30일 걷기 챌린지"
              description: "매일 1만보 걷기"
              type: "DAILY"
              goal: 30
              startDate: "2024-06-01"
              endDate: "2024-06-30"
      responses:
        '200':
          description: 챌린지 생성 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeCreateResponse'
              example:
                challengeId: 1
                message: "챌린지 생성 완료"
    get:
      tags: [챌린지]
      summary: 챌린지 목록 조회
      parameters:
        - in: query
          name: sort
          schema:
            type: string
            enum: [RECENT, POPULAR]
          example: RECENT
        - in: query
          name: page
          schema:
            type: integer
          example: 1
        - in: query
          name: size
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: 챌린지 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChallengeListResponse'
              example:
                - challengeId: 1
                  title: "30일 걷기 챌린지"
                  type: "DAILY"
                  progress: 10
                - challengeId: 2
                  title: "주간 달리기"
                  type: "WEEKLY"
                  progress: 3

  /api/challenge/{challengeId}:
    get:
      tags: [챌린지]
      summary: 챌린지 상세 조회
      parameters:
        - in: path
          name: challengeId
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: 챌린지 상세 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeDetailResponse'
              example:
                challengeId: 1
                title: "30일 걷기 챌린지"
                description: "매일 1만보 걷기"
                type: "DAILY"
                goal: 30
                participants:
                  - userId: 1
                    nickname: "홍길동"
                    progress: 10
                  - userId: 2
                    nickname: "임꺽정"
                    progress: 8

  /api/challenge/{challengeId}/join:
    post:
      tags: [챌린지]
      summary: 챌린지 참가
      parameters:
        - in: path
          name: challengeId
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: 참가 결과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeJoinResponse'
              example:
                message: "참가 완료"

  /api/community:
    post:
      tags: [커뮤니티]
      summary: 게시글 작성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
            example:
              title: "첫 번째 게시글"
              content: "안녕하세요!"
      responses:
        '200':
          description: 작성 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  communityId:
                    type: integer
                  message:
                    type: string
              example:
                communityId: 10
                message: "작성 완료"
    get:
      tags: [커뮤니티]
      summary: 게시글 목록 조회
      parameters:
        - in: query
          name: search
          schema:
            type: string
          example: "운동"
        - in: query
          name: page
          schema:
            type: integer
          example: 1
        - in: query
          name: size
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: 게시글 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommunityListResponse'
              example:
                - communityId: 10
                  title: "첫 번째 게시글"
                  content: "안녕하세요!"
                  author: "홍길동"
                  createdAt: "2024-06-01T12:00:00Z"

  /api/community/{communityId}:
    get:
      tags: [커뮤니티]
      summary: 게시글 상세 조회
      parameters:
        - in: path
          name: communityId
          required: true
          schema:
            type: integer
          example: 10
      responses:
        '200':
          description: 게시글 상세 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunityDetailResponse'
              example:
                communityId: 10
                title: "첫 번째 게시글"
                content: "안녕하세요!"
                author: "홍길동"
                createdAt: "2024-06-01T12:00:00Z"

  /api/exer:
    post:
      tags: [운동]
      summary: 운동 기록 등록
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                duration:
                  type: integer
                type:
                  type: string
            example:
              date: "2024-06-01"
              duration: 60
              type: "RUN"
      responses:
        '200':
          description: 기록 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  workId:
                    type: integer
                  message:
                    type: string
              example:
                workId: 100
                message: "기록 완료"

  /api/exer/week:
    get:
      tags: [운동]
      summary: 주간 운동 통계
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date
          example: "2024-06-01"
        - in: query
          name: end
          schema:
            type: string
            format: date
          example: "2024-06-07"
      responses:
        '200':
          description: 주간 통계
          content:
            application/json:
              schema:
                type: object
                properties:
                  maxDay:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                      duration:
                        type: integer
                  average:
                    type: integer
              example:
                maxDay:
                  date: "2024-06-03"
                  duration: 120
                average: 60

components:
  schemas:
    AccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string

    ChallengeCreateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [DAILY, WEEKLY]
        goal:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    ChallengeCreateResponse:
      type: object
      properties:
        challengeId:
          type: integer
        message:
          type: string

    ChallengeListResponse:
      type: object
      properties:
        challengeId:
          type: integer
        title:
          type: string
        type:
          type: string
        progress:
          type: integer

    ChallengeDetailResponse:
      type: object
      properties:
        challengeId:
          type: integer
        title:
          type: string
        description:
          type: string
        type:
          type: string
        goal:
          type: integer
        participants:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
              nickname:
                type: string
              progress:
                type: integer

    ChallengeJoinResponse:
      type: object
      properties:
        message:
          type: string

    CommunityListResponse:
      type: object
      properties:
        communityId:
          type: integer
        title:
          type: string
        content:
          type: string
        author:
          type: string
        createdAt:
          type: string
          format: date-time

    CommunityDetailResponse:
      type: object
      properties:
        communityId:
          type: integer
        title:
          type: string
        content:
          type: string
        author:
          type: string
        createdAt:
          type: string
          format: date-time 